basePath: /api
definitions:
  request.LoginDTO:
    properties:
      email:
        example: john@gmail.com
        type: string
      password:
        example: Test1234!
        type: string
    type: object
  request.Project:
    properties:
      alias:
        example: PA
        type: string
      description:
        example: Description of the Project A.
        type: string
      is_active:
        example: true
        type: boolean
      name:
        example: Project A
        type: string
    type: object
  request.ProjectContainsUser:
    properties:
      user_email:
        example: collaborator@gmail.com
        type: string
    type: object
  request.Requirement:
    properties:
      description:
        example: Description of the Requirement A.
        type: string
      origin_id:
        example: c1d8e2a4-88ea-43e6-bb90-5711b34b7a8f
        type: string
      priority_id:
        example: f3ab3bf0-76f1-4ad7-8c3b-1f93eac9d4a0
        type: string
      project_id:
        example: 38b27910-e17f-4b8d-bc3f-85ca1c76e3db
        type: string
      title:
        example: Requirement A
        type: string
      type_id:
        example: 9e57a3e7-8be3-4c0e-8a0d-6ae7cde4b87c
        type: string
      user_story:
        example: User story of the Requirement A.
        type: string
    type: object
  request.SignUpDTO:
    properties:
      email:
        example: jose@gmail.com
        type: string
      first_name:
        example: José
        type: string
      last_name:
        example: Santos
        type: string
      password:
        example: Test1234!
        type: string
    type: object
  response.Authorization:
    properties:
      access_token:
        type: string
    type: object
  response.ErrorMessage:
    properties:
      invalid_fields:
        items:
          $ref: '#/definitions/response.InvalidField'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.GeneralResources:
    properties:
      origins:
        items:
          $ref: '#/definitions/response.Origin'
        type: array
      priorities:
        items:
          $ref: '#/definitions/response.Priority'
        type: array
      types:
        items:
          $ref: '#/definitions/response.Type'
        type: array
    type: object
  response.ID:
    properties:
      id:
        type: string
    type: object
  response.InvalidField:
    properties:
      description:
        type: string
      field_name:
        type: string
    type: object
  response.Origin:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  response.Priority:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      level:
        type: string
      updated_at:
        type: string
    type: object
  response.Project:
    properties:
      alias:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  response.ProjectContainsUser:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      updated_at:
        type: string
      user_email:
        type: string
      user_first_name:
        type: string
      user_id:
        type: string
      user_last_name:
        type: string
    type: object
  response.Requirement:
    properties:
      code:
        type: integer
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      origin_id:
        type: string
      priority_id:
        type: string
      project_id:
        type: string
      title:
        type: string
      type_id:
        type: string
      updated_at:
        type: string
      user_story:
        type: string
    type: object
  response.Type:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact:
    email: fss30@aluno.ifal.edu.br
    name: Felipe da Silva Santos
  description: RMS backend API
  title: RMS API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: |-
        Rota que permite que um usuário se autentique no sistema utilizando seu endereço de e-mail e senha.
        | E-mail              | Senha     |
        |---------------------|-----------|
        | john@gmail.com      | Test1234! |
        | jane@gmail.com      | Test1234! |
        | bob@gmail.com       | Test1234! |
        | williams@gmail.com  | Test1234! |
        | brown@gmail.com     | Test1234! |
      operationId: Login
      parameters:
      - description: JSON com todos os dados necessários para que o login seja realizado.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.LoginDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Requisição realizada com sucesso.
          schema:
            $ref: '#/definitions/response.Authorization'
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Algum dado informado não pôde ser processado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados não está disponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Fazer login no sistema
      tags:
      - Rotas de autenticação
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Rota que permite o cadastro de um novo usuário.
      operationId: SignUp
      parameters:
      - description: JSON com todos os dados necessários para que o cadastro seja
          realizado.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.SignUpDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Requisição realizada com sucesso.
          schema:
            $ref: '#/definitions/response.Authorization'
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Algum dado informado não pôde ser processado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados não está disponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Fazer login no sistema
      tags:
      - Rotas de autenticação
  /collaborators/{projectID}:
    get:
      description: Rota que permite a listagem dos colaboradores.
      operationId: ProjectContainsUser.List
      parameters:
      - description: ID do projeto.
        in: path
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            items:
              $ref: '#/definitions/response.ProjectContainsUser'
            type: array
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Listar colaboradores
      tags:
      - Colaboradores
    post:
      consumes:
      - application/json
      description: Rota que permite a adição de um colaborador ao projeto.
      operationId: ProjectContainsUser.Create
      parameters:
      - description: ID do projeto.
        in: path
        name: projectID
        required: true
        type: string
      - description: JSON com todos os dados necessários para adicionar um colaborador.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.ProjectContainsUser'
      produces:
      - application/json
      responses:
        "201":
          description: Requisição realizada com sucesso.
          schema:
            $ref: '#/definitions/response.ID'
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Adicionar colaborador
      tags:
      - Colaboradores
  /collaborators/{projectID}/{userID}:
    delete:
      consumes:
      - application/json
      description: Rota que permite a deleção de um colaborador.
      operationId: ProjectContainsUser.Delete
      parameters:
      - description: ID do projeto.
        in: path
        name: projectID
        required: true
        type: string
      - description: ID do usuário colaborador.
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Requisição realizada com sucesso.
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Deletar colaborador
      tags:
      - Colaboradores
  /collaborators/possible-collaborators/{projectID}:
    get:
      description: Rota que permite a listagem dos usuários que podem ser adicionados
        como colaboradores.
      operationId: ProjectContainsUser.InverseList
      parameters:
      - description: ID do projeto.
        in: path
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            items:
              $ref: '#/definitions/response.ProjectContainsUser'
            type: array
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Listar usuários que não são colaboradores
      tags:
      - Colaboradores
  /projects:
    get:
      description: Rota que permite a listagem dos projetos.
      operationId: Project.List
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            items:
              $ref: '#/definitions/response.Project'
            type: array
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - bearerAuth: []
      summary: Listar projetos
      tags:
      - Projetos
    post:
      consumes:
      - application/json
      description: Rota que permite o cadastro de um projeto.
      operationId: Project.Create
      parameters:
      - description: JSON com todos os dados necessários para se cadastrar um projeto.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.Project'
      produces:
      - application/json
      responses:
        "201":
          description: Requisição realizada com sucesso.
          schema:
            $ref: '#/definitions/response.ID'
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Cadastrar projeto
      tags:
      - Projetos
  /projects/{id}:
    delete:
      consumes:
      - application/json
      description: Rota que permite a deleção de um projeto.
      operationId: Project.Delete
      parameters:
      - description: ID do projeto.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Requisição realizada com sucesso.
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Deletar projeto
      tags:
      - Projetos
    get:
      description: Rota que permite a buscar dos detalhes de um projeto pelo ID.
      operationId: Project.Get
      parameters:
      - description: ID do projeto.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            $ref: '#/definitions/response.Project'
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Buscar detalhes de um projeto pelo ID
      tags:
      - Projetos
    put:
      consumes:
      - application/json
      description: Rota que permite a atualização de um projeto.
      operationId: Project.Update
      parameters:
      - description: ID do projeto.
        in: path
        name: id
        required: true
        type: string
      - description: JSON com todos os dados necessários para se atualizar um projeto.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.Project'
      produces:
      - application/json
      responses:
        "204":
          description: Requisição realizada com sucesso.
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Atualizar projeto
      tags:
      - Projetos
  /requirements:
    get:
      description: Rota que permite a listagem dos requisitos de um projeto.
      operationId: Requirement.List
      parameters:
      - description: ID do projeto.
        in: query
        name: projectID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            items:
              $ref: '#/definitions/response.Requirement'
            type: array
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Listar requisitos de um projeto
      tags:
      - Requisitos
    post:
      consumes:
      - application/json
      description: Rota que permite o cadastro de um requisito de um projeto.
      operationId: Requirement.Create
      parameters:
      - description: JSON com todos os dados necessários para se cadastrar um requisito.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.Requirement'
      produces:
      - application/json
      responses:
        "201":
          description: Requisição realizada com sucesso.
          schema:
            $ref: '#/definitions/response.ID'
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Cadastrar requisito
      tags:
      - Requisitos
  /requirements/{id}:
    delete:
      consumes:
      - application/json
      description: Rota que permite a deleção de um requisito de um projeto.
      operationId: Requirement.Delete
      parameters:
      - description: ID do requisito.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Requisição realizada com sucesso.
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Deletar requisito de um projeto
      tags:
      - Requisitos
    get:
      description: Rota que permite a buscar dos detalhes de um requisito pelo ID.
      operationId: Requirement.Get
      parameters:
      - description: ID do requisito.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            $ref: '#/definitions/response.Requirement'
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Buscar detalhes de um projeto pelo ID
      tags:
      - Requisitos
    put:
      consumes:
      - application/json
      description: Rota que permite a atualização de um requisito de um projeto.
      operationId: Requirement.Update
      parameters:
      - description: ID do requisito.
        in: path
        name: id
        required: true
        type: string
      - description: JSON com todos os dados necessários para se atualizar um projeto.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.Requirement'
      produces:
      - application/json
      responses:
        "204":
          description: Requisição realizada com sucesso.
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Atualizar requisito
      tags:
      - Requisitos
  /resources:
    get:
      description: Rota que permite a listagem de todos os recursos.
      operationId: GeneralResources.List
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            items:
              $ref: '#/definitions/response.GeneralResources'
            type: array
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Listar todos os recursos
      tags:
      - Recursos
  /resources/origins:
    get:
      description: Rota que permite a listagem das origens.
      operationId: Origin.List
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            items:
              $ref: '#/definitions/response.Origin'
            type: array
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Listar origens
      tags:
      - Recursos
  /resources/priorities:
    get:
      description: Rota que permite a listagem das prioridades.
      operationId: Priority.List
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            items:
              $ref: '#/definitions/response.Priority'
            type: array
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Listar prioridades
      tags:
      - Recursos
  /resources/types:
    get:
      description: Rota que permite a listagem dos tipos.
      operationId: Type.List
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            items:
              $ref: '#/definitions/response.Type'
            type: array
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Vefique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Listar tipos
      tags:
      - Recursos
securityDefinitions:
  bearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
